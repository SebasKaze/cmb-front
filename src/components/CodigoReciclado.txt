import Partidas from "./Seccion7_partida";
import React, { useState, useEffect } from "react";

function Seccion7({ formData, setFormData }) {
    const [section7, setSections] = useState([]);

    useEffect(() => {
        if (!formData.seccion7) {
            setFormData((prev) => ({ ...prev, seccion7: [] }));
        }
    }, [formData, setFormData]);

    const handleAddSection = () => {
        const newSection = { id: Date.now(), partidas: [] };
        setSections([...section7, newSection]);
        setFormData((prev) => ({
            ...prev,
            seccion7: [...(prev.seccion7 || []), newSection],
        }));
    };

    const handleRemoveSection = (id) => {
        setSections(section7.filter((section) => section.id !== id));
        setFormData((prev) => ({
            ...prev,
            seccion7: prev.seccion7.filter((section) => section.id !== id),
        }));
    };

    const updatePartida = (sectionId, updatedPartida) => {
        const updatedSections = section7.map((section) =>
            section.id === sectionId
                ? {
                      ...section,
                      partidas: section.partidas.map((partida) =>
                          partida.id === updatedPartida.id ? updatedPartida : partida
                      ),
                  }
                : section
        );
        setSections(updatedSections);
        setFormData((prev) => ({
            ...prev,
            seccion7: updatedSections,
        }));
    };

    const handleAddPartida = (sectionId) => {
        const newPartida = { id: Date.now(), codigoProducto: "", observaciones: "" };
        const updatedSections = section7.map((section) =>
            section.id === sectionId
                ? { ...section, partidas: [...section.partidas, newPartida] }
                : section
        );
        setSections(updatedSections);
        setFormData((prev) => ({
            ...prev,
            seccion7: updatedSections,
        }));
    };

    return (
        <div className="p-6">
            <h2 className="text-xl font-bold mb-4 text-center">Partidas</h2>
            <section>
                <div className="grid grid-cols-3 gap-4">
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">Numero de pedimento</label>
                        <span>{formData.noPedimento || "N/A"}</span>
                    </div>
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">Tipo de operacion</label>
                        <span>{formData.tipoOperacion || "N/A"}</span>
                    </div>
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">Clave de pedimento</label>
                        <span>{formData.clavePedimento || "N/A"}</span>
                    </div>
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">RFC</label>
                        <span>{formData.RFC || "N/A"}</span>
                    </div>
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">CURP</label>
                        <span>{formData.CURP || "N/A"}</span>
                    </div>
                </div>
                <h3 className="text-xl font-bold mb-4 text-center">
                    Informacion de partidas
                </h3>
                <div>
                    {section7.map((section) => (
                        <div key={section.id}>
                            <h4 className="text-lg font-bold mb-2 text-center">
                                Secci√≥n {section.id}
                            </h4>
                            {section.partidas.map((partida) => (
                                <Partidas
                                    key={partida.id}
                                    partida={partida}
                                    onRemove={() => handleRemovePartida(section.id, partida.id)}
                                    onUpdate={(updatedPartida) =>
                                        updatePartida(section.id, updatedPartida)
                                    }
                                />
                            ))}
                            <button
                                className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
                                onClick={() => handleAddPartida(section.id)}
                            >
                                Agregar Partida
                            </button>
                        </div>
                    ))}
                    <div className="mb-4 text-center">
                        <button
                            className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
                            onClick={handleAddSection}
                        >
                            Agregar Partida
                        </button>
                    </div>
                </div>
            </section>
        </div>
    );
}

export default Seccion7;


import React from "react";
import PartidaContri from "./Seccion7_partida_con";

function Partidas({ onRemove, onUpdate }) {
    const [partida, setPartida] = useState({
        SecS7P: "",
        FraccionS7P: "",
        SUBDS7P: "",
        VincS7P: "",
        MetS7P: "",
        UMCS7P: "",
        CantiUMCS7P: "",
        UMTS7P: "",
        CantiUMTS7P: "",
        PVCS7P: "",
        PODS7P: "",
        DescS7P: "",
        VALADUS7P: "",
        IMPOPRES7P: "",
        PRECIOUNITS7P: "",
        VALAGRES7P: "",
        MarcaS7P: "",
        ModeloS7P: "",
        CodigoProS7P: "",
        ObserS7P: "",
        contribuciones: [],
    });
    const handleChange = (e) => {
        const { name, value } = e.target;
        const updatedPartida = { ...partida, [name]: value };
        setPartida(updatedPartida);
        onUpdate(updatedPartida);
    };
    return (
        <div>
            <div className="grid grid-cols-4 gap-4 bg-emerald-100 w-9/12 mx-auto p-4 rounded">
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">Sec</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" 
                    name="SecS7P"
                    value={partida.SecS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">Fraccion</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" 
                    name="FraccionS7P"
                    value={partida.FraccionS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">SUBD</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" 
                    name="SUBDS7P"
                    value={partida.SUBDS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">Vinc.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" 
                    name="VincS7P"
                    value={partida.VincS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">Met. Val.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" 
                    name="MetS7P"
                    value={partida.MetS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">UMC</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="number"  
                    name="UMCS7P"
                    value={partida.UMCS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">Cantidad UMC</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="number" step="0.000001" 
                    name="CantiUMCS7P"
                    value={partida.CantiUMCS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">UMT</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="number" 
                    name="UMTS7P"
                    value={partida.UMTS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">Cantidad UMT</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="number" step="0.000001" 
                    name="CantiUMTS7P"
                    value={partida.CantiUMTS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">P. V/C</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text"  maxlength="3"
                    name="PVCS7P"
                    value={partida.PVCS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">P. O/D</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" maxlength="3"
                    name="PODS7P"
                    value={partida.PODS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="col-span-1 flex flex-col items-center text-center">
                    <label className="mb-2">Descripcion</label>
                    <textarea
                    className="w-full border border-gray-300 rounded p-2"
                    rows="2"
                    name="DescS7P"
                    value={partida.DescS7P}
                    onChange={handleChange}>
                    </textarea>
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">VAL. ADU/VAL. USD.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="number" step="0.00001"
                    name="VALADUS7P"
                    value={partida.VALADUS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">IMP. PRECIO PAG./VALOR COMERCIAL.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="number" 
                    name="IMPOPRES7P"
                    value={partida.IMPOPRES7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">PRECIO UNIT.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="number" step="0.00001" 
                    name="PRECIOUNITS7P"
                    value={partida.PRECIOUNITS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">VAL. AGREG.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="number" step="0.00001" 
                    name="VALAGRES7P"
                    value={partida.VALAGRES7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">MARCA.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" 
                    name="MarcaS7P"
                    value={partida.MarcaS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">MODELO.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" 
                    name="ModeloS7P"
                    value={partida.ModeloS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="flex flex-col items-center text-center">
                    <label className="mb-2">C√ìDIGO PRODUCTO.</label>
                    <input className="w-full border border-gray-300 rounded p-2" type="text" 
                    name="CodigoProS7P"
                    value={partida.CodigoProS7P}
                    onChange={handleChange}
                    />
                </div>
                <div className="col-span-1 flex flex-col items-center text-center">
                    <label className="mb-2">Observacion a nivel partida</label>
                    <textarea
                    className="w-full border border-gray-300 rounded p-2"
                    rows="2"
                    name="ObserS7P"
                    value={partida.ObserS7P}
                    onChange={handleChange}
                    >
                    </textarea>
                </div>
            </div>
            {/*CONTRIBUCIONES*/}
            <PartidaContri
                contribuciones={partida.contribuciones}
                setContribuciones={(contribuciones) =>
                    setPartida((prev) => ({ ...prev, contribuciones }))
                }
            />
            <div className="col-span-3 text-right">
                <button
                className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
                onClick={onRemove}>
                    Eliminar Partida
                </button>
            </div>
        </div>
    );
}
export default Partidas;

import React, { useState } from "react";

function Contribuciones({ contribuciones, setContribuciones }) {
    const [contributions, setContributions] = useState([]);

    const handleAddContribution = () => {
        setContributions([
            ...contributions,
            { id: Date.now(), con: "", tasa: "", tt: "", fp: "", importe: "" },
        ]);
    };

    const handleRemoveContribution = (id) => {
        setContribuciones(contribuciones.filter((contribution) => contribution.id !== id));
    };
    const handleInputChange = (id, field, value) => {
        setContributions((prevContributions) =>
            prevContributions.map((contribution) =>
                contribution.id === id ? { ...contribution, [field]: value } : contribution
            )
        );
    };

    return (
        <div>

            {contributions.map((contribution) => (
                <div key={contribution.id} className="grid grid-cols-5 gap-4 bg-emerald-200 w-7/12 mx-auto p-4 rounded mb-4">
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">CON</label>
                        <select className="w-full border border-gray-300 rounded p-2 bg-white"
                        value={contribution.con}
                        onChange={(e) =>
                            handleInputChange(contribution.id, "con", e.target.value)}
                        >
                            <option value="" disabled selected>Seleccione una opci√≥n</option>
                            <option value="DTA">DTA</option>
                            <option value="C.C.">C.C.</option>
                            <option value="IVA">IVA</option>
                            <option value="ISAN">ISAN</option>
                            <option value="IGI/IGE">IGI/IGE</option>
                            <option value="REC.">REC.</option>
                            <option value="OTROS">OTROS</option>
                            <option value="MULT.">MULT.</option>
                            <option value="2.5">2.5</option>
                            <option value="RT">RT</option>
                            <option value="PRV">PRV</option>
                            <option value="EUR">EUR</option>
                            <option value="REU">REU</option>
                            <option value="MT">MT</option>
                            <option value="IEPS">IEPS</option>
                            <option value="IVA/PRV">IVA/PRV</option>
                            <option value="2IB">2IB</option>
                            <option value="2IA2">2IA2</option>
                            <option value="2IA1">2IA1</option>
                            <option value="2IC">2IC</option>
                            <option value="2IF">2IF</option>
                            <option value="2IG">2IG</option>
                            <option value="2IJ">2IJ</option>
                            <option value="2II">2II</option>
                            <option value="ICF">ICF</option>
                            <option value="IEPSDIE">IEPSDIE</option>
                            <option value="ICNF">ICNF</option>
                            <option value="LIEPS">LIEPS</option>
                            <option value="DFC">DFC</option>
                        </select>
                    </div>
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">TASA.</label>
                        <input className="w-full border border-gray-300 rounded p-2" type="text"
                        value={contribution.tasa}
                        onChange={(e) =>
                            handleInputChange(contribution.id, "tasa", e.target.value)
                        }
                        />
                    </div>
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">T. T.</label>
                        <input className="w-full border border-gray-300 rounded p-2" type="text"
                        value={contribution.tt}
                        onChange={(e) =>
                            handleInputChange(contribution.id, "tt", e.target.value)
                        }
                        />
                    </div>
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">F.P.</label>
                        <input className="w-full border border-gray-300 rounded p-2" type="text"
                        value={contribution.fp}
                        onChange={(e) =>
                            handleInputChange(contribution.id, "fp", e.target.value)
                        }
                        />
                    </div>
                    <div className="flex flex-col items-center text-center">
                        <label className="mb-2">IMPORTE.</label>
                        <input className="w-full border border-gray-300 rounded p-2" type="text"
                        value={contribution.importe}
                        onChange={(e) =>
                            handleInputChange(contribution.id, "importe", e.target.value)
                        }
                        />
                    </div>
                    <div className="col-span-5 text-right">
                        <button
                            className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
                            onClick={() => handleRemoveContribution(contribution.id)}>
                            Eliminar Contribuci√≥n
                        </button>
                    </div>
                </div>
            ))}
                        <div className="mb-4 text-center">
                <button
                    className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
                    onClick={handleAddContribution}>
                    Agregar Contribuci√≥n
                </button>
            </div>
        </div>
    );
}

export default Contribuciones;



// Codigo para agregar props

import { useState, useEffect } from "react";
import { FaAccessibleIcon } from "react-icons/fa";
import { FaPlus } from "react-icons/fa";

function Materiales() {

    const [data, setData] = useState([]);

    const [isPopupOpen, setIsPopupOpen] = useState(false);

    useEffect(() => {
    fetch("http://localhost:4000/api/verMateriales")
        .then((response) => response.json())
        .then((data) => setData(data))
        .catch((error) => console.error("Error al obtener los datos:", error));
    }, []);


    const handleOpenPopup = () => setIsPopupOpen(true);
    const handleClosePopup = () => setIsPopupOpen(false);
    return (
        <div>
            <div className="w-full">
            <button 
            className="bg-green-500 text-white px-4 py-2 rounded-md flex items-center gap-2 shadow-md transition-all duration-300 hover:bg-green-600 hover:scale-105"
            onClick={handleOpenPopup}>
            Nuevo material <FaPlus />
            </button>
            </div>
            <div className="w-full max-w-5xl p-4">
                <table className="w-full border border-gray-300 shadow-lg bg-white">
                <thead className="bg-gray-200">
                    <tr>
                    <th className="border p-2">ID</th>
                    <th className="border p-2">Nombre</th>
                    <th className="border p-2">Fraccion</th>
                    <th className="border p-2">Descripcion</th>
                    <th className="border p-2">Unidad de medida</th>
                    <th className="border p-2"> </th>
                    </tr>
                </thead>
                <tbody>
                {data.map((row) => (
                    <tr key={row.id_material_interno} className="text-center">
                    <td className="border p-2">{row.id_material_interno}</td>
                    <td className="border p-2">Nombre</td>
                    <td className="border p-2">{row.fraccion_arancelaria}</td>
                    <td className="border p-2">Descripcion</td>
                    <td className="border p-2">Unidad de mediad</td>
                    <td className="border p-2 flex justify-center gap-2">
                        <button className="text-blue-500 hover:text-blue-800">
                        <FaAccessibleIcon />
                        </button>
                    </td>
                    </tr>
                ))}
                </tbody>
                </table>
            </div>
            {/* Este es PopUp */}
            {isPopupOpen && (
                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                <div className="bg-white p-6 rounded-lg shadow-lg w-96">
                    <h2 className="text-lg font-bold mb-4">Nuevo Material</h2>
                    <form>
                    <div className="mb-2">
                        <label className="block text-gray-700">ID</label>
                        <input 
                        type="text" 
                        name="id" 
                        
                        className="w-full border rounded-md p-2 focus:outline-none focus:ring focus:ring-green-300" 
                        />
                    </div>
                    <div className="mb-2">
                        <label className="block text-gray-700">Nombre</label>
                        <input 
                        type="text" 
                        name="nombre" 
                        
                        className="w-full border rounded-md p-2 focus:outline-none focus:ring focus:ring-green-300" 
                        />
                    </div>
                    <div className="mb-4">
                        <label className="block text-gray-700">Descripci√≥n</label>
                        <input 
                        type="text" 
                        name="descripcion" 
                    
                        className="w-full border rounded-md p-2 focus:outline-none focus:ring focus:ring-green-300" 
                        />
                    </div>
                    <div className="flex justify-end gap-2">
                        <button 
                        type="button" 
                        className="bg-gray-400 text-white px-4 py-2 rounded-md hover:bg-gray-500"
                        onClick={handleClosePopup}
                        >
                        Cancelar
                        </button>
                        <button 
                        type="submit" 
                        className="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600"
                        >
                        Guardar
                        </button>
                    </div>
                    </form>
                </div>
                </div>
            )}

        </div>
    )
}
export default Materiales;